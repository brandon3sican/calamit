# Generated by Django 4.1.7 on 2023-05-21 12:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('barangay', '0001_initial'),
        ('factors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landmark', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=12)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=12)),
                ('elevation', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sRating', models.DecimalField(decimal_places=2, max_digits=3)),
                ('aRating', models.DecimalField(decimal_places=2, max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('barangay', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='barangay.barangay')),
                ('dRed', models.ForeignKey(db_column='dRed', on_delete=django.db.models.deletion.RESTRICT, related_name='drainage', to='factors.factorrating')),
                ('fFactor', models.ForeignKey(db_column='fFactor', on_delete=django.db.models.deletion.RESTRICT, related_name='failure', to='factors.factorrating')),
                ('lFactor', models.ForeignKey(db_column='lFactor', on_delete=django.db.models.deletion.RESTRICT, related_name='land_use', to='factors.factorrating')),
                ('sRed', models.ForeignKey(db_column='sRed', on_delete=django.db.models.deletion.RESTRICT, related_name='spring', to='factors.factorrating')),
                ('vFactor', models.ForeignKey(db_column='vFactor', on_delete=django.db.models.deletion.RESTRICT, related_name='vegetation', to='factors.factorrating')),
            ],
            options={
                'db_table': 'risk_assessment',
            },
        ),
    ]
